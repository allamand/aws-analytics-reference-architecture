apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: spark-driver
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ['on-demand']
    - key: 'node.kubernetes.io/instance-type'
      operator: In
      values: ['m5.large']
    - key: 'topology.kubernetes.io/zone'
      operator: In
      values: ['eu-west-1a', 'eu-west-1b']
  limits:
    resources:
      cpu: 1000
  labels:
    arch: x86
    disk: none
    capacitytype: on-demand
    noderole: spark
    type: karpenter
  provider:
    instanceProfile: KarpenterNodeInstanceProfile-data-platform
    subnetSelector:
      karpenter.sh/discovery: 'data-platform'
    securityGroupSelector:
      kubernetes.io/cluster/data-platform: 'owned'
      #karpenter.sh/discovery: 'data-platform'
    #launchTemplate: SparkKarpenterLaunchTemplate-my-stack-dev
    #launchTemplate: eksctl-spark-eks-best-practices-nodegroup-spark-spot-nvme-1a
    #launchTemplate: eksctl-spark-eks-best-practices-nodegroup-spark-od-1a
    tags:
      # k8s.io/cluster-autoscaler/node-template/label/arch: x86
      # k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/os: linux
      # k8s.io/cluster-autoscaler/node-template/label/noderole: spark
      # k8s.io/cluster-autoscaler/node-template/label/disk: none
      # k8s.io/cluster-autoscaler/node-template/label/node-lifecycle: on-demand
      # k8s.io/cluster-autoscaler/node-template/label/topology.kubernetes.io/zone: us-east-1a
  ttlSecondsAfterEmpty: 30
  ttlSecondsUntilExpired: 2592000
---
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: spark-executor
spec:
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: ['spot']
    - key: 'node.kubernetes.io/instance-type'
      operator: In
      values: ['r5d.4xlarge', 'r5ad.4xlarge', 'r5dn.4xlarge']
    - key: 'topology.kubernetes.io/zone'
      operator: In
      values: ['us-east-1a', 'us-east-1b']
  limits:
    resources:
      cpu: 1000
  labels:
    arch: x86
    disk: nvme
    capacitytype: spot
    noderole: spark
    type: karpenter
  taints:
    - key: spot
      value: 'true'
      effect: NoSchedule
  provider:
    instanceProfile: KarpenterNodeInstanceProfile-data-platform
    subnetSelector:
      karpenter.sh/discovery: 'data-platform'
    securityGroupSelector:
      kubernetes.io/cluster/data-platform: 'owned'
      #karpenter.sh/discovery: 'data-platform'
    #launchTemplate: SparkKarpenterLaunchTemplate-my-stack-dev
    #launchTemplate: eksctl-spark-eks-best-practices-nodegroup-spark-spot-nvme-1a
    #launchTemplate: eksctl-spark-eks-best-practices-nodegroup-spark-od-1a
    tags:
      # k8s.io/cluster-autoscaler/node-template/label/arch: x86
      # k8s.io/cluster-autoscaler/node-template/label/kubernetes.io/os: linux
      # k8s.io/cluster-autoscaler/node-template/label/noderole: spark
      # k8s.io/cluster-autoscaler/node-template/label/disk: nvme
      # k8s.io/cluster-autoscaler/node-template/label/node-lifecycle: spot
      # k8s.io/cluster-autoscaler/node-template/label/topology.kubernetes.io/zone: us-east-1a
  ttlSecondsAfterEmpty: 30
  ttlSecondsUntilExpired: 2592000
